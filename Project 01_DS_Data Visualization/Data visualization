# Step-by-Step Explanation
1. Data Loading
First, load the dataset into a pandas DataFrame. This step involves reading the data from a file (e.g., CSV,
Excel) into a format that can be easily manipulated.
import pandas as pd
# Load the dataset
df = pd.read_csv('your_dataset.csv')
2. Initial Exploration
Explore the structure of the dataset to understand its contents. Check for missing values and get summary
statistics.
# Display the first few rows of the dataset
print(df.head())
# Get summary statistics
print(df.describe())
# Check for missing values
print(df.isnull().sum())
3. Data Cleaning
Clean the data by handling missing values, removing duplicates, and correcting data types.
# Handle missing values (e.g., fill with mean or drop)
df['column_name'].fillna(df['column_name'].mean(), inplace=True)
# Remove duplicates
df.drop_duplicates(inplace=True)
# Convert data types if necessary
df['column_name'] = df['column_name'].astype('int')
4. Exploratory Data Analysis (EDA)
Perform EDA to understand the relationships between variables and identify patterns and trends.
a. Univariate Analysis
Analyze individual variables to understand their distribution.
import matplotlib.pyplot as plt
import seaborn as sns
# Histogram for a continuous variable
plt.figure(figsize=(10, 6))
sns.histplot(df['age'], bins=10, kde=True)
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()
# Bar chart for a categorical variable
plt.figure(figsize=(10, 6))
sns.countplot(x='gender', data=df)
plt.title('Gender Distribution')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()
b. Bivariate Analysis
Analyze the relationship between two variables.
# Scatter plot for two continuous variables
plt.figure(figsize=(10, 6))
sns.scatterplot(x='age', y='income', data=df)
plt.title('Age vs Income')
plt.xlabel('Age')
plt.ylabel('Income')
plt.show()
# Box plot for a continuous variable across categories
plt.figure(figsize=(10, 6))
sns.boxplot(x='gender', y='income', data=df)
plt.title('Income Distribution by Gender')
plt.xlabel('Gender')
plt.ylabel('Income')
plt.show()
c. Multivariate Analysis
Analyze the relationships between more than two variables.
# Pair plot to see relationships between multiple variables
sns.pairplot(df[['age', 'income', 'spending_score']])
plt.show()
# Heatmap to see correlations between variables
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()
Summary
Data Loading: Load the dataset into a pandas DataFrame.
Initial Exploration: Understand the structure of the dataset, check for missing values, and get summary
statistics.
Data Cleaning: Handle missing values, remove duplicates, and correct data types.
Exploratory Data Analysis (EDA): Perform univariate, bivariate, and multivariate analysis to explore
relationships between variables and identify patterns and trends.
